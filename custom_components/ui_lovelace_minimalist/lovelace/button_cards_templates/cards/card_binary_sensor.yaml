### Card Binary Sensor ###
card_binary_sensor:
  template:
    - "ulm_language_variables"
  triggers_update: "all"
  show_icon: false
  show_name: false
  show_label: false
  styles:
    grid:
      - grid-template-areas: "'item1 item2'"
      - grid-template-columns: "min-content 1fr"
      - grid-template-rows: "min-content"
      - column-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template:
          - "icon_alert"
          - "blue"
        entity: "[[[ return entity.entity_id ]]]"
        variables:
          tap_action: more-info
          ulm_alert: "[[[ return variables.ulm_alert ]]]"
    item2:
      card:
        type: "custom:button-card"
        template:
          - "tag"
        entity: "[[[ return entity.entity_id ]]]"
        variables:
          ulm_show_last_changed: true
          ulm_label_1: >
            [[[
              var unit = entity.attributes.unit_of_measurement != null ? " " + entity.attributes.unit_of_measurement : ""
              if (entity.state == "on") {
                return variables.ulm_on;
              } else if (entity.state == "off") {
                return variables.ulm_off;
              } else if (entity.state == "unavailable") {
                return variables.ulm_unavailable;
              } else if (entity.state == "idle") {
                return variables.ulm_idle;
              } else if (entity.state == "open") {
                return variables.ulm_open;
              } else if (entity.state == "closed") {
                return variables.ulm_closed;
              } else {
                return entity.state + unit;
              }
            ]]]